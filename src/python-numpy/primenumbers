#!/usr/bin/python -OO
#
#    Python version with array() of prime number tests in misc languages
#    Copyright (C) 2002 Hans Ulrich Niedermann <primes@n-dimensional.de>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

"Python version with array() of prime number tests in misc languages"


import sys
import numpy as np


def sqrt(x):
    "integer square root approximation"
    if x <= 0:
        return x
    h = x/2
    while 1:
        l = h
        h = (h + x/h)/2
        if abs(l-h) <= 1:
            return (h+x/h)/2


max = (1<<16)
if len(sys.argv) == 2:
    max = int(sys.argv[1])

p = np.empty(shape=max, dtype=np.int_)
p[0] = 2
p[1] = 3
for i in range(2, max):
    p[i] = p[i-1] + 2
    k = 1
    s = sqrt(p[i])
    while (k<i) and (p[k] <= s):
        if (p[i] % p[k]) == 0:
            p[i] += 2
            k = 1
            s = sqrt(p[i])
        else:
            k = k + 1

for i in range(0, max):
    print "%u %u" % (i, p[i])


# Local Variables:
# mode:python
# End:
